<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EmberJS.CN Blog</title>
  <subtitle>Ember JS相关新闻与资源</subtitle>
  <id>http://emberjs.cn/blog</id>
  <link href="http://emberjs.cn/blog"/>
  <link href="http://emberjs.cn/blog/feed.xml" rel="self"/>
  <updated>2014-02-07T00:00:00Z</updated>
  <author>
    <name>EmberJS.CN</name>
  </author>
  <entry>
    <title>安全性发布 - Ember 1.2.2, and 1.3.2</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/02/07/ember-security-releases.html"/>
    <id>http://emberjs.cn/blog/2014/02/07/ember-security-releases.html</id>
    <published>2014-02-07T00:00:00Z</published>
    <updated>2014-02-07T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天Ember.js发布了1.2.2，1.3.2和1.4.0-beta.6，其中包含了一个重要安全问题的修复：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天Ember.js发布了1.2.2，1.3.2和1.4.0-beta.6，其中包含了一个重要安全问题的修复：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.4.0-beta.6 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.4.0-beta.5...v1.4.0-beta.6"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.3.1...v1.3.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.2.1...v1.2.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本次发布修复了一个XSS漏洞，在安全问题邮件列表中可以得到关于该漏洞的信息：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/1h6FRgr8lXQ"&gt;CVE-2014-0046&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐马上更新项目。为了方便升级，本次发布的版本主要只包含了安全修复（1.4.0-beta.6除外，该版本是一个常规的beta发布，并包含了此次的安全修复）。&lt;/p&gt;

&lt;p&gt;如果在生产环境下使用Ember.js，请考虑订阅&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;安全通知邮件列表&lt;/a&gt;。该邮件列表流量非常低，且只包含安全通知。&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_'&gt;更多内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js安全策略公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/security/"&gt;Ember.js安全策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js安全组&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>使用Ember.SimpleAuth实现用户登录逻辑</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/29/using-ember-simple-auth.html"/>
    <id>http://emberjs.cn/blog/2014/01/29/using-ember-simple-auth.html</id>
    <published>2014-01-29T00:00:00Z</published>
    <updated>2014-01-29T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.SimpleAuth是一个实现身份认证和授权的轻量级的Ember.js库。通过配置身份认证和授权策略可以实现任意形式的身份认证和授权机制。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-simpleauth'&gt;搭建Ember.SimpleAuth开发环境&lt;/h3&gt;
&lt;p&gt;安装RubyGems。&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd /path/to/ember-simple-auth
  bundle install
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行测试&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在命令行中运行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rake test
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;在浏览器中运行测试 &lt;/li&gt;
&lt;/ol&gt;
</summary>
    <content type="html">&lt;p&gt;Ember.SimpleAuth是一个实现身份认证和授权的轻量级的Ember.js库。通过配置身份认证和授权策略可以实现任意形式的身份认证和授权机制。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-simpleauth'&gt;搭建Ember.SimpleAuth开发环境&lt;/h3&gt;
&lt;p&gt;安装RubyGems。&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd /path/to/ember-simple-auth
  bundle install
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行测试&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在命令行中运行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rake test
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;在浏览器中运行测试 &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rackup

  # 然后访问：http://localhost:9292
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行示例&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd examples
  bundle install

  ./runner

  # 然后访问：http://localhost:4567
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>如何使用ember-dev来开发Ember包</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/28/how-to-use-ember-dev-to-develop-ember-packages.html"/>
    <id>http://emberjs.cn/blog/2014/01/28/how-to-use-ember-dev-to-develop-ember-packages.html</id>
    <published>2014-01-28T00:00:00Z</published>
    <updated>2014-01-28T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;h3 class='anchorable-toc' id='toc_ember-dev'&gt;Ember Dev是什么？&lt;/h3&gt;
&lt;p&gt;Ember Dev是由Ember核心团队开发的一个用来辅助开发Ember包的工具。目前还处于“社会主义初级阶段”，可谓是“万里长征”迈出了好几步。目前Ember Dev已经包含了一些基本的工具，可以帮助我们提高Ember包开发的速度。其为我们搭建了开发、测试、发布等基本操作环境。用官方的语言来表达一下Ember Dev现在的状态：&lt;/p&gt;

&lt;p&gt;“目前Ember Dev还不推荐公众使用，因为还缺少一些重要的特性，比如缺少生成器。”&lt;/p&gt;

&lt;p&gt;尽管如此，我们还是可以放心的使用Ember Dev来搭建Ember包项目的构建环境的。&lt;/p&gt;
</summary>
    <content type="html">&lt;h3 class='anchorable-toc' id='toc_ember-dev'&gt;Ember Dev是什么？&lt;/h3&gt;
&lt;p&gt;Ember Dev是由Ember核心团队开发的一个用来辅助开发Ember包的工具。目前还处于“社会主义初级阶段”，可谓是“万里长征”迈出了好几步。目前Ember Dev已经包含了一些基本的工具，可以帮助我们提高Ember包开发的速度。其为我们搭建了开发、测试、发布等基本操作环境。用官方的语言来表达一下Ember Dev现在的状态：&lt;/p&gt;

&lt;p&gt;“目前Ember Dev还不推荐公众使用，因为还缺少一些重要的特性，比如缺少生成器。”&lt;/p&gt;

&lt;p&gt;尽管如此，我们还是可以放心的使用Ember Dev来搭建Ember包项目的构建环境的。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;基本目录结构&lt;/h3&gt;&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;├── Assetfile
├── Gemfile
├── README.md
├── Rakefile
├── VERSION
├── config.ru
├── ember-dev.yml
├── generators
│   └── license.js
├── packages
│   └── ember-pkg-example
│       ├── lib
│       │   ├── core.js
│       │   └── main.js
│       ├── package.json
│       └── tests
├── project.json
└── tests
    └── ember_configuration.js
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;目录与文件用途&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Assetfile&lt;/code&gt;：rake-pipeline配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gemfile&lt;/code&gt;：定义项目依赖的RubyGems。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;：项目说明文件，通常包括项目的简介、使用说明、开发指南等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rakefile&lt;/code&gt;：项目开发过程中常使用的构建任务，通过&lt;code&gt;rake -T&lt;/code&gt;可以查看任务清单。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VERSION&lt;/code&gt;：项目版本申明文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config.ru&lt;/code&gt;：Rack配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-dev&lt;/code&gt;：ember-dev配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;generators/license.js&lt;/code&gt;：版权声明文件，该文件中的内容会被自动添加到生成的js文件的头部，用作版权声明。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packages&lt;/code&gt;：项目源代码目录，代码就是从这里开始的走向成功的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project.json&lt;/code&gt;：bpm配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests/ember_configuration.js&lt;/code&gt;：测试环境配置文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;实例代码&lt;/h4&gt;
&lt;p&gt;如果需要一个感性、直面的认识，那么赶紧去签出&lt;a href="https://github.com/emberjs-cn/ember-pkg-example"&gt;ember-pkg-example&lt;/a&gt;的源代码，然后按照&lt;a href="https://github.com/emberjs-cn/ember-pkg-example/blob/master/README.md"&gt;README&lt;/a&gt;一步步迈进吧。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>安全性发布 - Ember 1.0.1, 1.1.3, 1.2.1, and 1.3.1</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/14/ember-security-releases.html"/>
    <id>http://emberjs.cn/blog/2014/01/14/ember-security-releases.html</id>
    <published>2014-01-14T00:00:00Z</published>
    <updated>2014-01-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天发布的Ember.js
1.0.1，1.1.3，1.2.1，1.3.1和1.4.0-beta.2包含下面的重要的安全修复：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天发布的Ember.js
1.0.1，1.1.3，1.2.1，1.3.1和1.4.0-beta.2包含下面的重要的安全修复：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.4.0-beta.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.4.0-beta.1...v1.4.0-beta.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.3.0...v1.3.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.2.0...v1.2.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.3 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.1.2...v1.1.3"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.0.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.0.0...v1.0.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本次修复包含两个潜在的XSS漏洞，可以通过下面两个链接获取更多信息：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/2kpXXCxISS4"&gt;CVE-2014-0013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/PSE4RzTi6l4"&gt;CVE-2014-0014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐马上更新项目。为了方便升级，本次发布的版本主要只包含了安全修复（1.4.0-beta.2除外，该版本是一个常规的beta发布，并包含了此次的安全修复）。&lt;/p&gt;

&lt;p&gt;如果在生产环境下使用Ember.js，请考虑订阅&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;安全通知邮件列表&lt;/a&gt;。该邮件列表流量非常低，且只包含安全通知。&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_'&gt;更多内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js安全策略公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/security/"&gt;Ember.js安全策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js安全组&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data 1.0.0.beta.5发布</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/11/ember-data-1-0-0-beta-5.html"/>
    <id>http://emberjs.cn/blog/2014/01/11/ember-data-1-0-0-beta-5.html</id>
    <published>2014-01-11T00:00:00Z</published>
    <updated>2014-01-11T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;h3 class='anchorable-toc' id='toc_ember-data-changelog'&gt;Ember Data Changelog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果没有指定&lt;code&gt;factory&lt;/code&gt;，那么在&lt;code&gt;modelFor&lt;/code&gt;中实现键值标准化；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store.filter&lt;/code&gt;总是返回一个&lt;code&gt;FilteredRecordArray&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;带选项的属性支持&lt;code&gt;key&lt;/code&gt;选项；&lt;/li&gt;
&lt;li&gt;修正windows构建的问题；&lt;/li&gt;
&lt;li&gt;添加&lt;code&gt;DS.Errors&lt;/code&gt;对象；&lt;/li&gt;
&lt;li&gt;处理单个对象的&lt;code&gt;pushPayload&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;recordArrayManager&lt;/code&gt;中创建&lt;code&gt;RecordArrays&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;添加更多文档说明。&lt;/li&gt;
&lt;/ul&gt;
</summary>
    <content type="html">&lt;h3 class='anchorable-toc' id='toc_ember-data-changelog'&gt;Ember Data Changelog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果没有指定&lt;code&gt;factory&lt;/code&gt;，那么在&lt;code&gt;modelFor&lt;/code&gt;中实现键值标准化；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store.filter&lt;/code&gt;总是返回一个&lt;code&gt;FilteredRecordArray&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;带选项的属性支持&lt;code&gt;key&lt;/code&gt;选项；&lt;/li&gt;
&lt;li&gt;修正windows构建的问题；&lt;/li&gt;
&lt;li&gt;添加&lt;code&gt;DS.Errors&lt;/code&gt;对象；&lt;/li&gt;
&lt;li&gt;处理单个对象的&lt;code&gt;pushPayload&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;recordArrayManager&lt;/code&gt;中创建&lt;code&gt;RecordArrays&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;添加更多文档说明。&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.3.0 and 1.4 Beta Released</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/06/ember-1-3-0-and-ember-1-4-0-beta-released.html"/>
    <id>http://emberjs.cn/blog/2014/01/06/ember-1-3-0-and-ember-1-4-0-beta-released.html</id>
    <published>2014-01-06T00:00:00Z</published>
    <updated>2014-01-06T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.3.0 and the first beta in the 1.4 series
have just been released. This comes as the third cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_new-in-1-3'&gt;New in 1.3&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_non-array-dependencies-for-reducecomputed'&gt;Non-array Dependencies for ReduceComputed&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.3.0 and the first beta in the 1.4 series
have just been released. This comes as the third cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_new-in-1-3'&gt;New in 1.3&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_non-array-dependencies-for-reducecomputed'&gt;Non-array Dependencies for ReduceComputed&lt;/h4&gt;
&lt;p&gt;Generally, using &lt;code&gt;reduceComputed&lt;/code&gt; is all about efficiently computing the resulting value, but
occasionally you might need to recompute every time. It is now possible to instruct
&lt;code&gt;reduceComputed&lt;/code&gt; to completely recompute when an item is added/removed (instead of calling
the &lt;code&gt;addedItem&lt;/code&gt; and &lt;code&gt;removedItem&lt;/code&gt; callbacks).&lt;/p&gt;

&lt;p&gt;This is done by using either non-array dependent keys or adding &lt;code&gt;.[]&lt;/code&gt; to an array dependency.&lt;/p&gt;

&lt;p&gt;Take a look at the following example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.Object.extend({
  &lt;span class="comment"&gt;// When `string` is changed, `computed` is completely recomputed.&lt;/span&gt;
  &lt;span class="key"&gt;string&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;a string&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,

  &lt;span class="comment"&gt;// When an item is added to `array`, `addedItem` is called.&lt;/span&gt;
  &lt;span class="key"&gt;array&lt;/span&gt;: [],

  &lt;span class="comment"&gt;// When an item is added to `anotherArray`, `computed` is completely&lt;/span&gt;
  &lt;span class="comment"&gt;// recomputed.&lt;/span&gt;
  &lt;span class="key"&gt;anotherArray&lt;/span&gt;: [],

  &lt;span class="key"&gt;computed&lt;/span&gt;: Ember.reduceComputed(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;string&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;array&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;anotherArray.[]&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, {
    &lt;span class="key"&gt;addedItem&lt;/span&gt;: addedItemCallback,
    &lt;span class="key"&gt;removedItem&lt;/span&gt;: removedItemCallback
  })
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_testing'&gt;Testing&lt;/h4&gt;
&lt;p&gt;Testability of Ember applications is an ongoing priority, and the 1.3 release
contains a number of updates that result in a dramatic improvement.&lt;/p&gt;
&lt;h5 class='anchorable-toc' id='toc_custom-code-wait-code-hooks'&gt;Custom &lt;code&gt;wait()&lt;/code&gt; Hooks&lt;/h5&gt;
&lt;p&gt;You can now specify custom hooks to notify the asynchronous test helpers when all
async actions have completed. Under Ember 1.2 if you need to wait for an IndexDB
action, the default &lt;code&gt;wait&lt;/code&gt; implementation would not wait until that
action finished. Now you can simply register your own hook that will instruct wait
that it is truly time to continue.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.Test.registerWaiter(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
  &lt;span class="keyword"&gt;return&lt;/span&gt; hasPendingTransactions() == &lt;span class="integer"&gt;0&lt;/span&gt;;
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This instructs the &lt;code&gt;wait&lt;/code&gt; helper that the async actions are not finished until
&lt;code&gt;hasPendingTransactions&lt;/code&gt; is zero.&lt;/p&gt;

&lt;p&gt;You can find more details &lt;a href="https://github.com/emberjs/ember.js/pull/3433"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h5 class='anchorable-toc' id='toc_lazy-routing'&gt;Lazy Routing&lt;/h5&gt;
&lt;p&gt;Under Ember.js 1.2 routing is started as soon as you boot your application and &lt;em&gt;before&lt;/em&gt;
you call &lt;code&gt;visit&lt;/code&gt;. This results in duplicate routing which slows down your tests and also
potentially causes your tests to be less isolated.&lt;/p&gt;

&lt;p&gt;Under Ember.js 1.3 routing isn&amp;#39;t started until you call &lt;code&gt;visit&lt;/code&gt; for the first time. This
provides a couple of improvements to the way you test:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You do not need to call &lt;code&gt;App.advanceReadiness()&lt;/code&gt; in your test setup since the application
is automatically in a deferred state until calling &lt;code&gt;visit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;App.reset()&lt;/code&gt; now leaves the application in the same state as &lt;code&gt;App.setupForTesting()&lt;/code&gt; (a
deferred state).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find more details &lt;a href="https://github.com/emberjs/ember.js/pull/3695"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h5 class='anchorable-toc' id='toc_stubbable-code-controllers-code-property'&gt;Stubbable &lt;code&gt;controllers&lt;/code&gt; Property&lt;/h5&gt;
&lt;p&gt;Prior to Ember 1.3 you could not easily stub out any dependencies specified with &lt;code&gt;needs&lt;/code&gt;.
Now you can unit test controllers and stub their dependencies all within
&lt;code&gt;TheControllerClass.create()&lt;/code&gt; instead of having to use a container, register stubbed
dependencies, and instantiate the controller via &lt;code&gt;container.lookup()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Simplified example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; BrotherController = Ember.Controller.extend({
  &lt;span class="key"&gt;needs&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;sister&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="key"&gt;foo&lt;/span&gt;: Ember.computed.alias(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;controllers.sister.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
});

&lt;span class="keyword"&gt;var&lt;/span&gt; broController = BrotherController.create({
  &lt;span class="key"&gt;controllers&lt;/span&gt;: {
    &lt;span class="key"&gt;sister&lt;/span&gt;: { &lt;span class="key"&gt;foo&lt;/span&gt;: &lt;span class="integer"&gt;5&lt;/span&gt; }
  }
});

equal(broController.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="integer"&gt;5&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;`needs` dependencies can be stubbed&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Previously, specifying &lt;code&gt;controllers&lt;/code&gt; to &lt;code&gt;BrotherController&lt;/code&gt; would have resulted in an error,
and now under Ember.js 1.3 this works as expected.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_promise-improvements'&gt;Promise Improvements&lt;/h4&gt;
&lt;p&gt;Ember.js 1.3 has updated to &lt;code&gt;RSVP&lt;/code&gt; 3.0.3 which brings considerable performance improvements, a number
of new features, and significantly improved documentation coverage.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;RSVP&lt;/code&gt; has added a number of features that allow external tooling to be able to inspect and track the labels, states, and
values of promises. These improvements will be extremely useful when used with the next major
version of the &lt;a href="https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi"&gt;Ember Inspector&lt;/a&gt;.
Which will allow you to see a tree of promises and inspect their names, state, and fulfilled/rejected values.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;RSVP&lt;/code&gt; added a number of additional methods to &lt;code&gt;Promise&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Promise.cast&lt;/code&gt; - Coerces the given argument into a promise, or returns the argument if it is
already a promise.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Promise.catch&lt;/code&gt; - &lt;code&gt;catch&lt;/code&gt; is essentially syntactic sugar for &lt;code&gt;then(undefined, onRejection)&lt;/code&gt; which
makes it the same as the &lt;code&gt;catch&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; statement.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Promise.finally&lt;/code&gt; - The callback provided to &lt;code&gt;Promise.finally&lt;/code&gt; will be invoked regardless of the
promises fate (both fulfilled and rejected promises). This is essentially similar to native
&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;/&lt;code&gt;finally&lt;/code&gt; statements.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Promise.race&lt;/code&gt; - Will return a new promise which will be settled with the value of
the first promise that settles. In other words: given an array of promises &lt;code&gt;Promise.race&lt;/code&gt;
will return the value from the first argument that settles (like the winner in a &amp;quot;race&amp;quot;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please review &lt;a href="/api/modules/RSVP.html"&gt;the documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-improvements'&gt;Other Improvements&lt;/h4&gt;
&lt;p&gt;As usual, there are a ton of bug fixes and small improvements in this
release. You can see a list of all the changes in the CHANGELOG:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.3.0/CHANGELOG.md"&gt;Ember.js 1.3.0 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.4.0-beta.1/CHANGELOG.md"&gt;Ember.js 1.4.0 beta 1 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
