<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EmberJS.CN Blog</title>
  <subtitle>Ember JS相关新闻与资源</subtitle>
  <id>http://emberjs.cn/blog</id>
  <link href="http://emberjs.cn/blog"/>
  <link href="http://emberjs.cn/blog/feed.xml" rel="self"/>
  <updated>2014-02-17T00:00:00Z</updated>
  <author>
    <name>EmberJS.CN</name>
  </author>
  <entry>
    <title>EmberJS.CN一周岁</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/02/17/ember-js-cn-one-year-old.html"/>
    <id>http://emberjs.cn/blog/2014/02/17/ember-js-cn-one-year-old.html</id>
    <published>2014-02-17T00:00:00Z</published>
    <updated>2014-02-17T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;时间飞逝，日月如梭。从上线EmberJS.CN到今日，整整一周年过去了。一年里Ember社区改变了许多，特别是在Ember1.0正式版发布之后，更是发展迅速。不论是代码结构、新特性、运行的稳定性，还是文档、教程等等方面都有了很大的改进。时至今日，Ember.js已经发布了1.4.0版本，Ember Data也推出了1.0.0-beta.6版本，相信不久就会迎来ED的1.0正式版，届时肯定又会掀起整个社区的一次大骚动。&lt;/p&gt;

&lt;p&gt;在过去的一年里，Ember.js的里程碑：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2013-02-15 Ember.js发布1.0.0.rc.1&lt;/li&gt;
&lt;/ul&gt;
</summary>
    <content type="html">&lt;p&gt;时间飞逝，日月如梭。从上线EmberJS.CN到今日，整整一周年过去了。一年里Ember社区改变了许多，特别是在Ember1.0正式版发布之后，更是发展迅速。不论是代码结构、新特性、运行的稳定性，还是文档、教程等等方面都有了很大的改进。时至今日，Ember.js已经发布了1.4.0版本，Ember Data也推出了1.0.0-beta.6版本，相信不久就会迎来ED的1.0正式版，届时肯定又会掀起整个社区的一次大骚动。&lt;/p&gt;

&lt;p&gt;在过去的一年里，Ember.js的里程碑：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2013-02-15 Ember.js发布1.0.0.rc.1&lt;/li&gt;
&lt;li&gt;2013-08-31 Ember.js发布1.0.0正式版&lt;/li&gt;
&lt;li&gt;2013-09-04 Ember Data发布1.0.0-beta.2&lt;/li&gt;
&lt;li&gt;2013-09-06 制定了Ember 1.0后发布策略&lt;/li&gt;
&lt;li&gt;2013-12-17 定义了2014年的开发计划 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;伴随着Ember.js的成长，EmberJS.CN也不断的在长大，不断的为我们中文社区的Ember开发作着贡献。下面简单的回顾一下这一年中EmberJS.CN都做了些什么。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2013-02-18 EmberJS.CN诞生&lt;/li&gt;
&lt;li&gt;2013-03-06 EmberJS.CN&lt;a href="http://weibo.com/embercn"&gt;开博&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013-03-11 创建第一个QQ群（298026365）&lt;/li&gt;
&lt;li&gt;2013-04-06 &lt;a href="http://discuss.emberjs.cn"&gt;EmberJS.CN中文论坛&lt;/a&gt;上线&lt;/li&gt;
&lt;li&gt;2013-07-23 EmberJS.CN第一个开源项目&lt;a href="https://github.com/emberjs-cn/intimi"&gt;Intimi&lt;/a&gt;启动&lt;/li&gt;
&lt;li&gt;2013-09-10 Intimi 0.1.0发布&lt;/li&gt;
&lt;li&gt;2013-11-19 Intimi 0.2.0发布&lt;/li&gt;
&lt;li&gt;2013-12-15 完成与官方指南的同步&lt;a href="http://emberjs.cn/guides"&gt;翻译&lt;/a&gt;工作，并持续保持更新&lt;/li&gt;
&lt;li&gt;2014-02-15 EmberJS.CN第二个开源项目&lt;a href="https://github.com/emberjs-cn/ember-menglifang"&gt;Ember Menglifang&lt;/a&gt; 0.2.3发布&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在已经走在了2014年的日子里，EmberJS.CN将在未来的一年里持续的为大家服务，为Ember.JS在中文开发社区的推广努力。在这里也特别感谢一年以来大家对本网站的包容、谅解与支持。&lt;/p&gt;

&lt;p&gt;谢谢大家！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.4.0和1.5 Beta发布</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html"/>
    <id>http://emberjs.cn/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html</id>
    <published>2014-02-12T00:00:00Z</published>
    <updated>2014-02-12T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;h3 class='anchorable-toc' id='toc_1-4'&gt;1.4中的新特性&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;属性大括号扩展&lt;/h4&gt;
&lt;p&gt;在之前的Ember版本中，如果需要观察&lt;code&gt;baz&lt;/code&gt;的&lt;code&gt;foo&lt;/code&gt;和&lt;code&gt;bar&lt;/code&gt;属性，需要在同时设置&lt;code&gt;baz.foo&lt;/code&gt;和&lt;code&gt;baz.bar&lt;/code&gt;两个依赖键。&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; obj = Ember.Object.extend({
  &lt;span class="key"&gt;baz&lt;/span&gt;: {&lt;span class="key"&gt;foo&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAMMO&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;bar&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAZORZ&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;},

  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;</summary>
    <content type="html">&lt;h3 class='anchorable-toc' id='toc_1-4'&gt;1.4中的新特性&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;属性大括号扩展&lt;/h4&gt;
&lt;p&gt;在之前的Ember版本中，如果需要观察&lt;code&gt;baz&lt;/code&gt;的&lt;code&gt;foo&lt;/code&gt;和&lt;code&gt;bar&lt;/code&gt;属性，需要在同时设置&lt;code&gt;baz.foo&lt;/code&gt;和&lt;code&gt;baz.bar&lt;/code&gt;两个依赖键。&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; obj = Ember.Object.extend({
  &lt;span class="key"&gt;baz&lt;/span&gt;: {&lt;span class="key"&gt;foo&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAMMO&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;bar&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAZORZ&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;},

  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;使用最新的属性大括号扩展，可以这样来简化依赖设置：&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.{foo,bar}&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这样大大的简化了重复和冗余的相似依赖键的设置。&lt;/p&gt;

&lt;p&gt;详细的内容可以查看&lt;a href="https://github.com/emberjs/ember.js/pull/3538"&gt;PR #3538&lt;/a&gt;&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-run-bind'&gt;Ember.run.bind&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ember.run.bind&lt;/code&gt;是一个非常有用的工具，可以用来集成提供异步回调的非Ember库。&lt;/p&gt;

&lt;p&gt;Ember使用运行循环来批处理和合并更新。这是通过标记Ember相关代码的开始和结束执行来实现的。&lt;/p&gt;

&lt;p&gt;当使用事件时，如视图点击处理器，Ember把该处理器包裹在一个运行循环中。如果与非Ember库集成，那么就会变得非常让人厌烦。&lt;/p&gt;

&lt;p&gt;例如，下面的代码就非常的啰嗦，不过确实正确的处理第三方库事件的Ember代码：&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; that = &lt;span class="local-variable"&gt;this&lt;/span&gt;;
jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="keyword"&gt;function&lt;/span&gt;(){
  Ember.run(&lt;span class="keyword"&gt;function&lt;/span&gt;(){
    that.handleResize();
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;为了减少这种套式代码，下面的代码可以完成将回调包裹到一个运行循环中。&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, Ember.run.bind(&lt;span class="local-variable"&gt;this&lt;/span&gt;, &lt;span class="local-variable"&gt;this&lt;/span&gt;.handleResize));
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;更多的关于运行循环的内容，请查看&lt;a href="/guides/understanding-ember/run-loop/"&gt;运行循环指南&lt;/a&gt;。（非常感谢&lt;a href="https://github.com/bfbriggs"&gt;Brendan Briggs&lt;/a&gt;）。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-with-code'&gt;支持控制器的&lt;code&gt;{{with}}&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;{{with}}&lt;/code&gt;助手现在可以接收一个&lt;code&gt;controller&lt;/code&gt;选项。添加&lt;code&gt;controller=&amp;#39;something&amp;#39;&lt;/code&gt;表示&lt;code&gt;{{with}}&lt;/code&gt;助手将创建和使用一个指定的控制器来作为其内容的新上下文。&lt;/p&gt;

&lt;p&gt;这与&lt;code&gt;{{each}}&lt;/code&gt;助手中使用&lt;code&gt;itemController&lt;/code&gt;选项非常类似。&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt; &lt;span class="attribute-name"&gt;users.posts&lt;/span&gt; &lt;span class="attribute-name"&gt;controller&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;userBlogPosts&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  &lt;span class="comment"&gt;{{!- The current context is wrapped in our controller instance }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在上例中，提供给&lt;code&gt;{{with}}&lt;/code&gt;块的模板被包裹到&lt;code&gt;userBlogPost&lt;/code&gt;控制器中，这提供了一个非常简单的方法，来讲当前上下文中添加自定义的函数和属性。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;延迟绑定属性&lt;/h4&gt;
&lt;p&gt;之前，所有绑定的属性都有一定程度的开销（大部分是维护绑定和观察器之间的关联关系）。这导致需要限制自动绑定到&lt;code&gt;Ember.TextField&lt;/code&gt;，&lt;code&gt;Ember.TextArea&lt;/code&gt;等控件上的属性。对于越来越多的人希望绑定HTML5属性来说，这是一个问题的根源。为了多绑定属性，不得不重新打开&lt;code&gt;Ember.TextField&lt;/code&gt;类，然后添加可以绑定的属性。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.TextField.reopen({
  &lt;span class="key"&gt;attributeBindings&lt;/span&gt;: [&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;autofocus&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;]
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然后在模板中就可以：&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;input&lt;/span&gt; &lt;span class="attribute-name"&gt;autofocus&lt;/span&gt;=&lt;span class="attribute-value"&gt;omgAutofocusMe&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这当然不理想，对于那些认为&lt;code&gt;Ember.TextField&lt;/code&gt;理所当然支持的人来说，会遇到非常多问题。&lt;/p&gt;

&lt;p&gt;随着Ember 1.4的发布，这个问题得到了很好的处理。在1.4中，任何属性绑定在试图被渲染的时候如果不存在，那么不会为他设置观察器（因此避免了原本的性能开销问题）。当试图在之后又设置了该属性的时候（在初次渲染之后），一个属性观察器会在这时被添加。&lt;/p&gt;

&lt;p&gt;这意味着只会为存在的谁能够添加观察器，这样就可以在&lt;code&gt;attributeBindings&lt;/code&gt;中添加所有有效的HTML属性，今后就可以直接使用，而不需要在重新打开类来添加。&lt;/p&gt;

&lt;p&gt;在Ember 1.4中&lt;code&gt;{{input type=&amp;quot;text&amp;quot;}}&lt;/code&gt;，&lt;code&gt;{{textarea}}&lt;/code&gt;和&lt;code&gt;{{checkbox}}&lt;/code&gt;助手可以使用任何HTML5的属性。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;其他改进&lt;/h4&gt;
&lt;p&gt;一如既往，本次发布还修改了许多之前版本存在的Bugs，对一部分功能也作出了一些改进。详细的内容可以查看CHANGELOG：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.4.0/CHANGELOG.md"&gt;Ember.js 1.4.0 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.5.0-beta.1/CHANGELOG.md"&gt;Ember.js 1.5.0-beta.1 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>安全性发布 - Ember 1.2.2, and 1.3.2</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/02/07/ember-security-releases.html"/>
    <id>http://emberjs.cn/blog/2014/02/07/ember-security-releases.html</id>
    <published>2014-02-07T00:00:00Z</published>
    <updated>2014-02-07T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天Ember.js发布了1.2.2，1.3.2和1.4.0-beta.6，其中包含了一个重要安全问题的修复：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天Ember.js发布了1.2.2，1.3.2和1.4.0-beta.6，其中包含了一个重要安全问题的修复：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.4.0-beta.6 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.4.0-beta.5...v1.4.0-beta.6"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.3.1...v1.3.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.2.1...v1.2.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本次发布修复了一个XSS漏洞，在安全问题邮件列表中可以得到关于该漏洞的信息：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/1h6FRgr8lXQ"&gt;CVE-2014-0046&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐马上更新项目。为了方便升级，本次发布的版本主要只包含了安全修复（1.4.0-beta.6除外，该版本是一个常规的beta发布，并包含了此次的安全修复）。&lt;/p&gt;

&lt;p&gt;如果在生产环境下使用Ember.js，请考虑订阅&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;安全通知邮件列表&lt;/a&gt;。该邮件列表流量非常低，且只包含安全通知。&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_'&gt;更多内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js安全策略公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/security/"&gt;Ember.js安全策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js安全组&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>使用Ember.SimpleAuth实现用户登录逻辑</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/29/using-ember-simple-auth.html"/>
    <id>http://emberjs.cn/blog/2014/01/29/using-ember-simple-auth.html</id>
    <published>2014-01-29T00:00:00Z</published>
    <updated>2014-01-29T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.SimpleAuth是一个实现身份认证和授权的轻量级的Ember.js库。通过配置身份认证和授权策略可以实现任意形式的身份认证和授权机制。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-simpleauth'&gt;搭建Ember.SimpleAuth开发环境&lt;/h3&gt;
&lt;p&gt;安装RubyGems。&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd /path/to/ember-simple-auth
  bundle install
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行测试&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在命令行中运行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rake test
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;在浏览器中运行测试 &lt;/li&gt;
&lt;/ol&gt;
</summary>
    <content type="html">&lt;p&gt;Ember.SimpleAuth是一个实现身份认证和授权的轻量级的Ember.js库。通过配置身份认证和授权策略可以实现任意形式的身份认证和授权机制。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-simpleauth'&gt;搭建Ember.SimpleAuth开发环境&lt;/h3&gt;
&lt;p&gt;安装RubyGems。&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd /path/to/ember-simple-auth
  bundle install
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行测试&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在命令行中运行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rake test
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;在浏览器中运行测试 &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  rackup

  # 然后访问：http://localhost:9292
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行示例&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  cd examples
  bundle install

  ./runner

  # 然后访问：http://localhost:4567
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>如何使用ember-dev来开发Ember包</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/28/how-to-use-ember-dev-to-develop-ember-packages.html"/>
    <id>http://emberjs.cn/blog/2014/01/28/how-to-use-ember-dev-to-develop-ember-packages.html</id>
    <published>2014-01-28T00:00:00Z</published>
    <updated>2014-01-28T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;h3 class='anchorable-toc' id='toc_ember-dev'&gt;Ember Dev是什么？&lt;/h3&gt;
&lt;p&gt;Ember Dev是由Ember核心团队开发的一个用来辅助开发Ember包的工具。目前还处于“社会主义初级阶段”，可谓是“万里长征”迈出了好几步。目前Ember Dev已经包含了一些基本的工具，可以帮助我们提高Ember包开发的速度。其为我们搭建了开发、测试、发布等基本操作环境。用官方的语言来表达一下Ember Dev现在的状态：&lt;/p&gt;

&lt;p&gt;“目前Ember Dev还不推荐公众使用，因为还缺少一些重要的特性，比如缺少生成器。”&lt;/p&gt;

&lt;p&gt;尽管如此，我们还是可以放心的使用Ember Dev来搭建Ember包项目的构建环境的。&lt;/p&gt;
</summary>
    <content type="html">&lt;h3 class='anchorable-toc' id='toc_ember-dev'&gt;Ember Dev是什么？&lt;/h3&gt;
&lt;p&gt;Ember Dev是由Ember核心团队开发的一个用来辅助开发Ember包的工具。目前还处于“社会主义初级阶段”，可谓是“万里长征”迈出了好几步。目前Ember Dev已经包含了一些基本的工具，可以帮助我们提高Ember包开发的速度。其为我们搭建了开发、测试、发布等基本操作环境。用官方的语言来表达一下Ember Dev现在的状态：&lt;/p&gt;

&lt;p&gt;“目前Ember Dev还不推荐公众使用，因为还缺少一些重要的特性，比如缺少生成器。”&lt;/p&gt;

&lt;p&gt;尽管如此，我们还是可以放心的使用Ember Dev来搭建Ember包项目的构建环境的。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;基本目录结构&lt;/h3&gt;&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;├── Assetfile
├── Gemfile
├── README.md
├── Rakefile
├── VERSION
├── config.ru
├── ember-dev.yml
├── generators
│   └── license.js
├── packages
│   └── ember-pkg-example
│       ├── lib
│       │   ├── core.js
│       │   └── main.js
│       ├── package.json
│       └── tests
├── project.json
└── tests
    └── ember_configuration.js
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;目录与文件用途&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Assetfile&lt;/code&gt;：rake-pipeline配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gemfile&lt;/code&gt;：定义项目依赖的RubyGems。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;：项目说明文件，通常包括项目的简介、使用说明、开发指南等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rakefile&lt;/code&gt;：项目开发过程中常使用的构建任务，通过&lt;code&gt;rake -T&lt;/code&gt;可以查看任务清单。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VERSION&lt;/code&gt;：项目版本申明文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config.ru&lt;/code&gt;：Rack配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-dev&lt;/code&gt;：ember-dev配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;generators/license.js&lt;/code&gt;：版权声明文件，该文件中的内容会被自动添加到生成的js文件的头部，用作版权声明。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packages&lt;/code&gt;：项目源代码目录，代码就是从这里开始的走向成功的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project.json&lt;/code&gt;：bpm配置文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests/ember_configuration.js&lt;/code&gt;：测试环境配置文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;实例代码&lt;/h4&gt;
&lt;p&gt;如果需要一个感性、直面的认识，那么赶紧去签出&lt;a href="https://github.com/emberjs-cn/ember-pkg-example"&gt;ember-pkg-example&lt;/a&gt;的源代码，然后按照&lt;a href="https://github.com/emberjs-cn/ember-pkg-example/blob/master/README.md"&gt;README&lt;/a&gt;一步步迈进吧。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>安全性发布 - Ember 1.0.1, 1.1.3, 1.2.1, and 1.3.1</title>
    <link rel="alternate" href="http://emberjs.cn/blog/2014/01/14/ember-security-releases.html"/>
    <id>http://emberjs.cn/blog/2014/01/14/ember-security-releases.html</id>
    <published>2014-01-14T00:00:00Z</published>
    <updated>2014-01-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天发布的Ember.js
1.0.1，1.1.3，1.2.1，1.3.1和1.4.0-beta.2包含下面的重要的安全修复：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;因为开发者信任Ember.js在生产环境下来处理敏感的用户数据，因此Ember团队非常关注项目的安全问题。实际上，Ember是少数具有&lt;a href="http://emberjs.com/security/"&gt;清晰的安全策略&lt;/a&gt;和一个&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;为安全问题专设的邮件列表&lt;/a&gt;的Javascript项目之一。&lt;/p&gt;

&lt;p&gt;今天发布的Ember.js
1.0.1，1.1.3，1.2.1，1.3.1和1.4.0-beta.2包含下面的重要的安全修复：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.4.0-beta.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.4.0-beta.1...v1.4.0-beta.2"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.3.0...v1.3.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.2.0...v1.2.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.3 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.1.2...v1.1.3"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.0.1 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.0.0...v1.0.1"&gt;对比视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本次修复包含两个潜在的XSS漏洞，可以通过下面两个链接获取更多信息：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/2kpXXCxISS4"&gt;CVE-2014-0013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/PSE4RzTi6l4"&gt;CVE-2014-0014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐马上更新项目。为了方便升级，本次发布的版本主要只包含了安全修复（1.4.0-beta.2除外，该版本是一个常规的beta发布，并包含了此次的安全修复）。&lt;/p&gt;

&lt;p&gt;如果在生产环境下使用Ember.js，请考虑订阅&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;安全通知邮件列表&lt;/a&gt;。该邮件列表流量非常低，且只包含安全通知。&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_'&gt;更多内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js安全策略公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/security/"&gt;Ember.js安全策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js安全组&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
