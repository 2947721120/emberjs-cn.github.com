<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EmberJS.CN Blog</title>
  <subtitle>Ember JS相关新闻与资源</subtitle>
  <id>http://emberjs.cn/blog</id>
  <link href="http://emberjs.cn/blog"/>
  <link href="http://emberjs.cn/blog/feed.xml" rel="self"/>
  <updated>2013-07-06T00:00:00Z</updated>
  <author>
    <name>EmberJS.CN</name>
  </author>
  <entry>
    <title>Ember.js 1.0.0-rc6发布</title>
    <link rel="alternate" href="/blog/2013/07/06/ember-js-1-0-0-rc6.html"/>
    <id>/blog/2013/07/06/ember-js-1-0-0-rc6.html</id>
    <published>2013-07-06T00:00:00Z</published>
    <updated>2013-07-06T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC6 发布，可以在官方网站&lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;下载。本次发布主要有个大的更新：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;路由器更新&lt;/li&gt;
&lt;li&gt;Ember组件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;路由更新&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最大的修改就是路由器更新（或“路由整容”），围绕两个方面的主要问题：第一是基于URL的转换与&lt;code&gt;transitionTo&lt;/code&gt;的语义不一致。第二是异步支持不够好，使得很难在路由入口的地方实现一些禁止和延时的操作，比如身份验证和异步代码加载。&lt;/p&gt;

&lt;p&gt;Ember现在统一了URL改变和&lt;code&gt;transitionTo&lt;/code&gt;的语义，并且采用了Promise来增强异步行为。&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC6 发布，可以在官方网站&lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;下载。本次发布主要有个大的更新：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;路由器更新&lt;/li&gt;
&lt;li&gt;Ember组件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;路由更新&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最大的修改就是路由器更新（或“路由整容”），围绕两个方面的主要问题：第一是基于URL的转换与&lt;code&gt;transitionTo&lt;/code&gt;的语义不一致。第二是异步支持不够好，使得很难在路由入口的地方实现一些禁止和延时的操作，比如身份验证和异步代码加载。&lt;/p&gt;

&lt;p&gt;Ember现在统一了URL改变和&lt;code&gt;transitionTo&lt;/code&gt;的语义，并且采用了Promise来增强异步行为。&lt;/p&gt;

&lt;p&gt;此外，路由的转换被提升到最高级别，并且为其添加了新的钩子，可以实现禁止或者修饰转换：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;willTransition&lt;/code&gt;：无论什么时候一个转换将发生时将触发该钩子。
&lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;：这些钩子在异步验证期间被触发。&lt;/p&gt;

&lt;p&gt;最后，还有一个&lt;code&gt;error&lt;/code&gt;事件，当无论什么时候，如果出现拒绝的承诺或者在&lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;中有错误被抛出都会出发该事件。&lt;/p&gt;

&lt;p&gt;更多的关于路由新特性的介绍，请参看：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://machty.s3.amazonaws.com/ember-facelift-presentation/index.html#/1"&gt;新路由概述（Alex Matchneer六月在Ember
NYC见面会上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/machty/5647589"&gt;使用实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.embercasts.com/episodes/client-side-authentication-part-2"&gt;客户端身份验证（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember组件&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;另外一个重要的改变就是Ember组件，其采用了Web组件的推动创建高层次的可重用的页面元素目标。&lt;/p&gt;

&lt;p&gt;Ember组件由一个&lt;code&gt;模板&lt;/code&gt;和一个&lt;code&gt;视图&lt;/code&gt;构成，其封装了&lt;code&gt;模板&lt;/code&gt;的属性的访问和操作。所有外部构建的引用通过传递给&lt;code&gt;视图&lt;/code&gt;的上下文信息来处理。组件可以通过自定义子类来实现。&lt;/p&gt;

&lt;p&gt;Ember组件命名惯例：&lt;/p&gt;

&lt;p&gt;1）&lt;code&gt;模板&lt;/code&gt;名以&amp;#39;components/&amp;#39;开头；
2）组件名称必须包含&amp;#39;-&amp;#39;（这与Web组件标准保持一致，可以避免与包裹HTML元素的内置控件发生冲突）。例如，一个组件可能被命名为&lt;code&gt;&amp;#39;radio-button&amp;#39;&lt;/code&gt;。它的&lt;code&gt;模板&lt;/code&gt;就是&lt;code&gt;&amp;#39;components/radio-button&amp;#39;&lt;/code&gt;，在其他的&lt;code&gt;模板&lt;/code&gt;中用&lt;code&gt;{{radio-button}}&lt;/code&gt;调用。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>第七期周报</title>
    <link rel="alternate" href="/blog/2013/06/14/ember-js-weekly.html"/>
    <id>/blog/2013/06/14/ember-js-weekly.html</id>
    <published>2013-06-14T00:00:00Z</published>
    <updated>2013-06-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;本期周报主要介绍与测试相关的内容：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyrsa-tdd-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYrSA"&gt;如何TDD开发Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中详细介绍了如何使用jasmine来进行Ember.js应用的TDD开发。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhytx8y-jasmine-ember-js-a'&gt;&lt;a href="http://t.cn/zHYTx8y"&gt;使用jasmine测试Ember.js的模板&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中介绍了如何使用jasmine来对Ember.js的模板进行单元测试。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyjea-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYJeA"&gt;简捷的测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;本期周报主要介绍与测试相关的内容：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyrsa-tdd-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYrSA"&gt;如何TDD开发Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中详细介绍了如何使用jasmine来进行Ember.js应用的TDD开发。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhytx8y-jasmine-ember-js-a'&gt;&lt;a href="http://t.cn/zHYTx8y"&gt;使用jasmine测试Ember.js的模板&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中介绍了如何使用jasmine来对Ember.js的模板进行单元测试。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyjea-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYJeA"&gt;简捷的测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-testing库的作者Erik Bryn主讲的如何使用ember-testing来测试Ember.js应用。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyykah-konacha-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYkah"&gt;使用Konacha来测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;视频中演示了一个结合Konacha来进行的Ember.js应用验收测试过程。对应该视频的演讲稿&lt;a href="http://t.cn/zHYTwyf"&gt;http://t.cn/zHYTwyf&lt;/a&gt;&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;库、代码和工具&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyobo-bloggr-client-rails-a'&gt;&lt;a href="http://t.cn/zHYYObo"&gt;bloggr-client-rails&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个介绍如何使用QUnit和ember-testing来进行集成测试的例子。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyh6er-jsfiddle-mocha-ember-js-a'&gt;&lt;a href="http://t.cn/zHYH6er"&gt;jsfiddle上使用mocha对Ember.js进行测试的实例&lt;/a&gt;&lt;/h4&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyhleq-jsfiddle-qunit-ember-js-a'&gt;&lt;a href="http://t.cn/zHYHlEQ"&gt;jsfiddle上使用QUnit对Ember.js进行测试的实例&lt;/a&gt;&lt;/h4&gt;</content>
  </entry>
  <entry>
    <title>Ember.js 1.0.0-rc5发布</title>
    <link rel="alternate" href="/blog/2013/06/01/ember-js-1-0-0-rc5.html"/>
    <id>/blog/2013/06/01/ember-js-1-0-0-rc5.html</id>
    <published>2013-06-01T00:00:00Z</published>
    <updated>2013-06-01T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;今天是快乐的六一儿童节，Ember.js 1.0 RC5也在这一天发布了。本次发布预示着我们等待已久的Ember.js 1.0正式版马上就要横空出世了。&lt;/p&gt;

&lt;p&gt;RC5中主要修复了在RC4中发现的回归问题和缺陷。主要包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修复了因为改动了运行循环计划而导致的性能问题。&lt;/li&gt;
&lt;li&gt;修复了如果路由的模型钩子返回承诺（Promise）页面刷新时会挂起的问题。&lt;/li&gt;
&lt;li&gt;包含辅助测试方法的ember-testing不在包含在生产构建中。这意味着介绍了用户需要从网络加载的Javascript代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的修订记录：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;今天是快乐的六一儿童节，Ember.js 1.0 RC5也在这一天发布了。本次发布预示着我们等待已久的Ember.js 1.0正式版马上就要横空出世了。&lt;/p&gt;

&lt;p&gt;RC5中主要修复了在RC4中发现的回归问题和缺陷。主要包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修复了因为改动了运行循环计划而导致的性能问题。&lt;/li&gt;
&lt;li&gt;修复了如果路由的模型钩子返回承诺（Promise）页面刷新时会挂起的问题。&lt;/li&gt;
&lt;li&gt;包含辅助测试方法的ember-testing不在包含在生产构建中。这意味着介绍了用户需要从网络加载的Javascript代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的修订记录：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;为不正确的容器搜索名称添加断言&lt;/li&gt;
&lt;li&gt;增加了&lt;code&gt;Ember.beforeObserver&lt;/code&gt;的文档&lt;/li&gt;
&lt;li&gt;从生产构建中移除了ember-testing&lt;/li&gt;
&lt;li&gt;修复了承诺（Promise）在启动时的缺陷。修复 #2756&lt;/li&gt;
&lt;li&gt;同步router.js修复&lt;code&gt;App#reset&lt;/code&gt;在ember-testing中的问题&lt;/li&gt;
&lt;li&gt;声明&lt;code&gt;replaceWith&lt;/code&gt;只工作在&amp;#39;history&amp;#39;模式下&lt;/li&gt;
&lt;li&gt;修正了IE7下测试不通过的问题&lt;/li&gt;
&lt;li&gt;更新backburner，修复IE8下测试失败的问题&lt;/li&gt;
&lt;li&gt;更新Backburner.js修复RC4中的性能问题&lt;/li&gt;
&lt;li&gt;维护gem包的ruby版本&lt;/li&gt;
&lt;li&gt;移除starter_kit上传任务&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>第六期周报</title>
    <link rel="alternate" href="/blog/2013/05/30/ember-js-weekly.html"/>
    <id>/blog/2013/05/30/ember-js-weekly.html</id>
    <published>2013-05-30T00:00:00Z</published>
    <updated>2013-05-30T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;本期周报主要介绍如何搭建Ember.js应用的开发环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-thomasboyt-com-2013-05-02-announcing-charcoal-html-charcoal-ember-a'&gt;&lt;a href="http://www.thomasboyt.com/2013/05/02/announcing-charcoal.html"&gt;使用Charcoal创建Ember项目&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Charcoal是一个Yeoman的生成器，用于创建Ember项目的基本目录结构和文件。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-blog-embed-ly-post-46586649344-introduction-to-ember-development-ember-a'&gt;&lt;a href="http://blog.embed.ly/post/46586649344/introduction-to-ember-development"&gt;如何进行Ember开发&lt;/a&gt;&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;本期周报主要介绍如何搭建Ember.js应用的开发环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-thomasboyt-com-2013-05-02-announcing-charcoal-html-charcoal-ember-a'&gt;&lt;a href="http://www.thomasboyt.com/2013/05/02/announcing-charcoal.html"&gt;使用Charcoal创建Ember项目&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Charcoal是一个Yeoman的生成器，用于创建Ember项目的基本目录结构和文件。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-blog-embed-ly-post-46586649344-introduction-to-ember-development-ember-a'&gt;&lt;a href="http://blog.embed.ly/post/46586649344/introduction-to-ember-development"&gt;如何进行Ember开发&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Embedly在其产品中使用了Ember进行开发，在开发过程终于到了许多问题。本文主要介绍了如何构建一个开发Ember应用基础环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;库、代码和工具&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-yeoman-generator-ember-generator-ember-a'&gt;&lt;a href="https://github.com/yeoman/generator-ember"&gt;generator-ember&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Yeoman的Ember生成器，用来构建一个Ember的“Hello World”应用。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-zigomir-ember-skeleton-ember-skeleton-a'&gt;&lt;a href="https://github.com/zigomir/ember-skeleton"&gt;ember-skeleton&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-skeleton主要关注在开发的过程中实现在线重新载入，支持CoffeeScript，以及支持模板的预编译等。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-lsdafjklsd-grunt-ember-boilerplate-grunt-ember-boilerplate-a'&gt;&lt;a href="https://github.com/lsdafjklsd/grunt-ember-boilerplate"&gt;grunt-ember-boilerplate&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;grunt-ember-boilerplate中几乎涵盖了在开发Ember应用过程中会遇到和用到的所有相关技术。包括：Handlebars预编译、基于QUnit的集成测试、生成基础目录结构、commonjs模块、CoffeeScript、Stylus for CSS、Normalize.css、生成部署的预编译指令和本地开发的动态重载。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-thomasboyt-charcoal-charcoal-a'&gt;&lt;a href="https://github.com/thomasboyt/charcoal"&gt;charcoal&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个Fork自&lt;a href="https://github.com/yeoman/generator-ember"&gt;generator-ember&lt;/a&gt;的Yeoman的Ember生成器。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-rails-ember-rails-a'&gt;&lt;a href="https://github.com/emberjs/ember-rails"&gt;ember-rails&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-rails使得Ember在Rails 3.1+应用中得以使用。其可以将Handlebars模板在编译assets的时候进行预编译。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>使用ember-dev开发Ember.js库</title>
    <link rel="alternate" href="/blog/2013/05/28/using-ember-dev-to-develop-ember-js-packages.html"/>
    <id>/blog/2013/05/28/using-ember-dev-to-develop-ember-js-packages.html</id>
    <published>2013-05-28T00:00:00Z</published>
    <updated>2013-05-28T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;在第三期周报中，我们曾经推荐了&lt;a href="https://github.com/emberjs/ember-dev"&gt;ember-dev&lt;/a&gt;。目前作者还不建议我们在生产环境中使用ember-dev来开发Ember.js包，主要原因是ember-dev目前还不够成熟，接口不稳定，另外也缺失了一些重要特性，比如项目目录结构生成器。尽管如此，也无法遮住ember-dev的光芒，通过其目前提供的功能，已经可以很好的帮助我们进行Ember.js扩展功能的开发。下面将一步步介绍如何使用ember-dev来开发一个扩展包。&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;在第三期周报中，我们曾经推荐了&lt;a href="https://github.com/emberjs/ember-dev"&gt;ember-dev&lt;/a&gt;。目前作者还不建议我们在生产环境中使用ember-dev来开发Ember.js包，主要原因是ember-dev目前还不够成熟，接口不稳定，另外也缺失了一些重要特性，比如项目目录结构生成器。尽管如此，也无法遮住ember-dev的光芒，通过其目前提供的功能，已经可以很好的帮助我们进行Ember.js扩展功能的开发。下面将一步步介绍如何使用ember-dev来开发一个扩展包。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意：&lt;/em&gt; ember-dev是用来开发Ember.js扩展包的，而不是用来开发Ember.js应用的。请注意区分！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>第五期周报</title>
    <link rel="alternate" href="/blog/2013/05/24/ember-js-weekly.html"/>
    <id>/blog/2013/05/24/ember-js-weekly.html</id>
    <published>2013-05-24T00:00:00Z</published>
    <updated>2013-05-24T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;本周Ember.js热点：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-getting-started-with-ember-model-ember-model-a'&gt;&lt;a href="http://www.embercasts.com/episodes/getting-started-with-ember-model"&gt;Ember Model入门&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本视频介绍了如何使用&lt;a href="https://github.com/ebryn/ember-model"&gt;Ember Model&lt;/a&gt;。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-getting-started-with-emblem-js-emblem-js-a'&gt;&lt;a href="http://www.embercasts.com/episodes/getting-started-with-emblem-js"&gt;Emblem.js入门&lt;/a&gt;&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;本周Ember.js热点：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-getting-started-with-ember-model-ember-model-a'&gt;&lt;a href="http://www.embercasts.com/episodes/getting-started-with-ember-model"&gt;Ember Model入门&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本视频介绍了如何使用&lt;a href="https://github.com/ebryn/ember-model"&gt;Ember Model&lt;/a&gt;。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-getting-started-with-emblem-js-emblem-js-a'&gt;&lt;a href="http://www.embercasts.com/episodes/getting-started-with-emblem-js"&gt;Emblem.js入门&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Emblem.js是一个基于缩进的模板语言，它编译的结果与Handlebars模板一样，因此完全兼容Ember.js。本视频主要介绍了Emblem的语法和如何使用Emblem.js来写模板。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-youtube-com-watch-v-bs6xz-pxbvu-ember-js-phonegap-a'&gt;&lt;a href="http://www.youtube.com/watch?v=Bs6xz-pxBVU"&gt;采用Ember.js和PhoneGap构建移动应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;视频中介绍了如何采用Ember.js和PhoneGap来构建一个移动应用，通过观看该视频，你会发现原来一切来的如此简单。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-building-an-autocomplete-widget-part-1-a'&gt;&lt;a href="http://www.embercasts.com/episodes/building-an-autocomplete-widget-part-1"&gt;构建一个自动补全控件（一）&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本视频是关于如何构建一个自动补全控件的视频的第一部分，主要介绍了如何构建一个自动补全控件的基础。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-embercasts-com-episodes-client-side-authentication-part-1-a'&gt;&lt;a href="http://www.embercasts.com/episodes/client-side-authentication-part-1"&gt;客户端身份验证（一）&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;客户端身份验证系列视频总共分为两部分，第一部分主要介绍了客户端如何实现基于令牌的身份验证来从服务器端获取数据。视频重点介绍了如何构建一个登录表单来获取令牌。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;库、代码和工具&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-flamejs-flame-js-flame-js-a'&gt;&lt;a href="https://github.com/flamejs/flame.js"&gt;flame.js&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Flame.js是一个Ember.js的控件库。目标是提供一个类似桌面应用风格的控件库。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;特别感谢@ZOwl提供该库的信息。&lt;/em&gt;&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-ebryn-ember-model-ember-model-a'&gt;&lt;a href="https://github.com/ebryn/ember-model"&gt;ember-model&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Ember Model(EM)是一个简单的、轻量级的Ember模型库，ember-model主要提供了一个构建在$.ajax之上的一些操作，通过这些操作可以方便的实现与服务器的交互。&lt;/p&gt;
</content>
  </entry>
</feed>
