<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EmberJS.CN Blog</title>
  <subtitle>Ember JS相关新闻与资源</subtitle>
  <id>http://emberjs.cn/blog</id>
  <link href="http://emberjs.cn/blog"/>
  <link href="http://emberjs.cn/blog/feed.xml" rel="self"/>
  <updated>2013-08-14T00:00:00Z</updated>
  <author>
    <name>EmberJS.CN</name>
  </author>
  <entry>
    <title>Windows下Ember应用开发环境搭建</title>
    <link rel="alternate" href="/blog/2013/08/14/setup-an-ember-app-on-windows-with-yeoman.html"/>
    <id>/blog/2013/08/14/setup-an-ember-app-on-windows-with-yeoman.html</id>
    <published>2013-08-14T00:00:00Z</published>
    <updated>2013-08-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;环境：windows 7&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_nodejs'&gt;安装nodejs&lt;/h3&gt;&lt;h3 class='anchorable-toc' id='toc_grunt'&gt;安装grunt&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_grunt-grunt-cli'&gt;安装grunt命令行工具grunt-cli&lt;/h4&gt;
&lt;p&gt;执行全局安装&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  # grunt 必须依赖
  npm install -g grunt-cli
  # 生成项目脚手架 grunt-init --help
  npm install -g grunt-init
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_yeoman'&gt;安装Yeoman&lt;/h3&gt;
&lt;p&gt;Yeoman 是 yo + bower + grunt&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;yo:   生成 项目脚手架&lt;/li&gt;
&lt;li&gt;bower: 包管理工具&lt;/li&gt;
&lt;/ul&gt;
</summary>
    <content type="html">&lt;p&gt;环境：windows 7&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_nodejs'&gt;安装nodejs&lt;/h3&gt;&lt;h3 class='anchorable-toc' id='toc_grunt'&gt;安装grunt&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_grunt-grunt-cli'&gt;安装grunt命令行工具grunt-cli&lt;/h4&gt;
&lt;p&gt;执行全局安装&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  # grunt 必须依赖
  npm install -g grunt-cli
  # 生成项目脚手架 grunt-init --help
  npm install -g grunt-init
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_yeoman'&gt;安装Yeoman&lt;/h3&gt;
&lt;p&gt;Yeoman 是 yo + bower + grunt&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;yo:   生成 项目脚手架&lt;/li&gt;
&lt;li&gt;bower: 包管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  npm install -g yo
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;自动安装grunt 和 bower&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  # 生成项目脚手架
  npm install -g generator-webapp
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_'&gt;准备项目文件夹&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;创建项目文件夹&lt;/h4&gt;&lt;h4 class='anchorable-toc' id='toc_grunt'&gt;安装grunt及插件，安装在项目根目录&lt;/h4&gt;
&lt;p&gt;进入项目根目录&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  npm install grunt --save-dev
  npm install grunt-contrib-qunit --save-dev
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;验证版本 &lt;code&gt;grunt -version&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  grunt-cli v0.1.9
  grunt v0.4.1
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;创建一个项目脚手架代码&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  yo wabapp
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;查看目录下的文件，自动生成 package.json 和 Gruntfile&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;安装依赖的模块&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  npm install
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_'&gt;运行&lt;/h3&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  grunt server --force
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;http://localhost:9000 出现欢迎页面&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember'&gt;与ember集成&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_ember'&gt;下载ember相关包&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  bower install ember
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;app 目录下自动生成 bower_components&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_'&gt;安装模版编译插件&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  npm install grunt-ember-templates --save-dev
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;建立模版文件夹 templates&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  mkdir app/templates
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_gruntfile-js'&gt;修改Gruntfile.js 自动编译模版&lt;/h4&gt;
&lt;p&gt;在Gruntfile.js文件添加&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  grunt.loadNpmTasks(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;grunt-ember-templates&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在grunt.initConfig内添加&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;emberTemplates: {
  &lt;span class="key"&gt;compile&lt;/span&gt;: {
    &lt;span class="key"&gt;options&lt;/span&gt;: {
      &lt;span class="function"&gt;templateName&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(sourceFile) {
        &lt;span class="keyword"&gt;return&lt;/span&gt; sourceFile.replace(&lt;span class="regexp"&gt;&lt;span class="delimiter"&gt;/&lt;/span&gt;&lt;span class="content"&gt;app&lt;/span&gt;&lt;span class="content"&gt;\/&lt;/span&gt;&lt;span class="content"&gt;templates&lt;/span&gt;&lt;span class="content"&gt;\/&lt;/span&gt;&lt;span class="delimiter"&gt;/&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
      }
    },
    &lt;span class="key"&gt;files&lt;/span&gt;: {
      &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;&amp;lt;%= yeoman.app %&amp;gt;/scripts/templates.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: [&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;&amp;lt;%= yeoman.app%&amp;gt;/templates/**/*.handlebars&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;]
    }
  }
},
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在 watch处添加如下内容：&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;emberTemplates: {
    &lt;span class="key"&gt;files&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;&amp;lt;%= yeoman.app %&amp;gt;/templates/**/*.handlebars&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="key"&gt;tasks&lt;/span&gt;: [&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;emberTemplates&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;]
},
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后添加emberTemplates到server任务&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;grunt.registerTask(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;server&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="keyword"&gt;function&lt;/span&gt; (target) {
    ...
    grunt.task.run([
        ...
        &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;compass:server&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; emberTemplates&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="comment"&gt;// Add this line.&lt;/span&gt;
        &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;livereload-start&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
        ...
    ]);
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_'&gt;开发一个简单应用&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_app-scripts-main-js'&gt;在app/scripts/main.js 中 添加如下代码&lt;/h4&gt;&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App = Em.Application.create({
  &lt;span class="key"&gt;rootElement&lt;/span&gt;: &lt;span class="predefined"&gt;$&lt;/span&gt;(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;#app&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;),
});

App.Router.map(&lt;span class="keyword"&gt;function&lt;/span&gt;(){
  &lt;span class="local-variable"&gt;this&lt;/span&gt;.route(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;about&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_index-html'&gt;在 index.html&lt;/h4&gt;&lt;div class="highlight html "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt; &lt;span class="tag"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="attribute-name"&gt;id&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;app&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="attribute-name"&gt;class&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;container&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;   
 &lt;span class="tag"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;添加js文件&lt;/p&gt;
&lt;div class="highlight html "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="tag"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="attribute-name"&gt;src&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;bower_components/jquery/jquery.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;       
  &lt;span class="tag"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="attribute-name"&gt;src&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;bower_components/handlebars/handlebars.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="tag"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="attribute-name"&gt;src&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;bower_components/ember/ember.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

  &lt;span class="tag"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="attribute-name"&gt;src&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;scripts/main.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="tag"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="attribute-name"&gt;src&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;scripts/templates.js&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;建立模版&lt;/h4&gt;
&lt;p&gt;在 app/templates目录下建立模版文件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;application.handlebars&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="tag"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My App&lt;span class="tag"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;outlet&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;index.handlebars&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="tag"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My App&lt;span class="tag"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="tag"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;index&lt;span class="tag"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt; &lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="attribute-name"&gt;about&lt;/span&gt;&lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;About&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;about.handlebars&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="tag"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;About&lt;span class="tag"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt; &lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="attribute-name"&gt;index&lt;/span&gt;&lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;index&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_'&gt;运行&lt;/h4&gt;&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  grunt server --force
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;http://localhost:9000 出现欢迎页面，内容如下：&lt;/p&gt;

&lt;p&gt;My App
  index
  About&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_grunt-gruntfile-js'&gt;下一步，修改 grunt Gruntfile.js&lt;/h3&gt;
&lt;p&gt;对components、controllers、models、routes、views等js文件进行合并和压缩。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 1.0 RC7发布</title>
    <link rel="alternate" href="/blog/2013/08/14/ember-1-0-rc7.html"/>
    <id>/blog/2013/08/14/ember-1-0-rc7.html</id>
    <published>2013-08-14T00:00:00Z</published>
    <updated>2013-08-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;今天Ember.js 1.0 RC7发布了！如果一切顺利，这将是Ember 1.0的倒数第二个RC版本。RC7中修复了许多Bug，同时也包括了一些小的改进。另外还有一些Bug还在修正中，由于RC7已经逾期了，因此不等修正所有的Bug。下周将发布RC8，下面内容包含了本次发布做的一些修改。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;重要改变&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_code-route-controllerfor-code'&gt;&lt;code&gt;Route#controllerFor&lt;/code&gt;不再自动生成控制器&lt;/h4&gt;
&lt;p&gt;有的时候，人们依赖&lt;code&gt;controllerFor&lt;/code&gt;来访问没有进入过的路由的控制器，依赖其自动生成的功能。然而不幸地是这样经常会导致一些小问题。当进入一个路由时，Ember查找一个与其名字对应的控制器。如果控制器没有找到，Ember会根据路由的模型的类型为其生成一个。如果模型是一个数组，那么将生成一个&lt;code&gt;ArrayController&lt;/code&gt;；如果是一个对象，那么则生成一个&lt;code&gt;ObjectController&lt;/code&gt;；如果两者都不是，则生成一个标准&lt;code&gt;Controller&lt;/code&gt;。在大多数情况下，当在路由之外使用&lt;code&gt;controllerFor&lt;/code&gt;时，并没有提供一个模型，那么Ember会创建一个基础的&lt;code&gt;Controller&lt;/code&gt;。如果之后进入到该路由，这个控制器不会被重新创建，那么控制器的类型就可能与提供的model不匹配。&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;今天Ember.js 1.0 RC7发布了！如果一切顺利，这将是Ember 1.0的倒数第二个RC版本。RC7中修复了许多Bug，同时也包括了一些小的改进。另外还有一些Bug还在修正中，由于RC7已经逾期了，因此不等修正所有的Bug。下周将发布RC8，下面内容包含了本次发布做的一些修改。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;重要改变&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_code-route-controllerfor-code'&gt;&lt;code&gt;Route#controllerFor&lt;/code&gt;不再自动生成控制器&lt;/h4&gt;
&lt;p&gt;有的时候，人们依赖&lt;code&gt;controllerFor&lt;/code&gt;来访问没有进入过的路由的控制器，依赖其自动生成的功能。然而不幸地是这样经常会导致一些小问题。当进入一个路由时，Ember查找一个与其名字对应的控制器。如果控制器没有找到，Ember会根据路由的模型的类型为其生成一个。如果模型是一个数组，那么将生成一个&lt;code&gt;ArrayController&lt;/code&gt;；如果是一个对象，那么则生成一个&lt;code&gt;ObjectController&lt;/code&gt;；如果两者都不是，则生成一个标准&lt;code&gt;Controller&lt;/code&gt;。在大多数情况下，当在路由之外使用&lt;code&gt;controllerFor&lt;/code&gt;时，并没有提供一个模型，那么Ember会创建一个基础的&lt;code&gt;Controller&lt;/code&gt;。如果之后进入到该路由，这个控制器不会被重新创建，那么控制器的类型就可能与提供的model不匹配。&lt;/p&gt;

&lt;p&gt;鉴于此，取消了&lt;code&gt;controllerFor&lt;/code&gt;自动生成控制器的功能。在大多数应用中，这不会导致任何问题，但是如果之前依赖于这个行为，那么就需要更新应用。如果有一个控制器没有与一个路由关联，那么应该显示定义控制器的类，而不再依赖自动生成。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-old-router-code'&gt;删除&lt;code&gt;old-router&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Ember旧有的路由在第一个RC版本的时候就已经废除，并且不在被包含在标准RC中，但一些用户依然使用旧的路由。尽管这样，也是时候剪断这个联系了。越来越多新功能的增加，特别是容器，已经与旧的路由不兼容。因此，从Ember代码库中把旧路由的代码删除，不再支持自定义的Ember构建包含旧路由。强烈建议还在使用旧路由的用户升级到新的路由。不过如果有人对维护一个不依赖于Ember主库的旧路由库，可以告诉Ember开发团队。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;其他改变&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;升级Handlebars版本至1.0.0&lt;/strong&gt; - Handlebars
1.0.0几乎与RC6同时发布。但是不幸的是之前并没有更新至1.0.0版本。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mergedProperties&lt;/code&gt; -
与&lt;code&gt;concatenatedProperties&lt;/code&gt;类似但是是提供给对象的。其将两个基本对象的属性合并为一个对象。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;废除&lt;code&gt;template&lt;/code&gt;，倾向&lt;code&gt;partial&lt;/code&gt;&lt;/strong&gt; -
这两个方法存在重叠。最终定为&lt;code&gt;partial&lt;/code&gt;并且不在需要一个基于下划线开头的名称。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;更新Backburner.js（Ember的RunLoop）-
修正了&lt;code&gt;debounce&lt;/code&gt;添加&lt;code&gt;throttle&lt;/code&gt;&lt;/strong&gt; -
之前&lt;code&gt;Ember.run.debounce&lt;/code&gt;实际上提供节流作用。&lt;code&gt;debounce&lt;/code&gt;现在执行防抖，而节流行为被移至&lt;code&gt;Ember.run.throttle&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;路由可以通过&lt;code&gt;controllerName&lt;/code&gt;指定其控制器的类名。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加&lt;code&gt;Ember.Route#disconnectOutlet&lt;/code&gt;，允许清楚之前渲染的outlet。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为Router.map添加功能，允许其可以多次调用，不再覆盖之前的映射。允许在运行期添加路由。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;更新：&lt;/em&gt;之前建议在控制器没有关联到一个路由时，使用&lt;code&gt;Route#generateController&lt;/code&gt;。现在建议显示的声明控制器的类来取代依赖生成。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 1.0.0-rc6发布</title>
    <link rel="alternate" href="/blog/2013/07/06/ember-js-1-0-0-rc6.html"/>
    <id>/blog/2013/07/06/ember-js-1-0-0-rc6.html</id>
    <published>2013-07-06T00:00:00Z</published>
    <updated>2013-07-06T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC6 发布，可以在官方网站&lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;下载。本次发布主要有个大的更新：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;路由器更新&lt;/li&gt;
&lt;li&gt;Ember组件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;路由更新&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最大的修改就是路由器更新（或“路由整容”），围绕两个方面的主要问题：第一是基于URL的转换与&lt;code&gt;transitionTo&lt;/code&gt;的语义不一致。第二是异步支持不够好，使得很难在路由入口的地方实现一些禁止和延时的操作，比如身份验证和异步代码加载。&lt;/p&gt;

&lt;p&gt;Ember现在统一了URL改变和&lt;code&gt;transitionTo&lt;/code&gt;的语义，并且采用了Promise来增强异步行为。&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC6 发布，可以在官方网站&lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;下载。本次发布主要有个大的更新：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;路由器更新&lt;/li&gt;
&lt;li&gt;Ember组件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;路由更新&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最大的修改就是路由器更新（或“路由整容”），围绕两个方面的主要问题：第一是基于URL的转换与&lt;code&gt;transitionTo&lt;/code&gt;的语义不一致。第二是异步支持不够好，使得很难在路由入口的地方实现一些禁止和延时的操作，比如身份验证和异步代码加载。&lt;/p&gt;

&lt;p&gt;Ember现在统一了URL改变和&lt;code&gt;transitionTo&lt;/code&gt;的语义，并且采用了Promise来增强异步行为。&lt;/p&gt;

&lt;p&gt;此外，路由的转换被提升到最高级别，并且为其添加了新的钩子，可以实现禁止或者修饰转换：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;willTransition&lt;/code&gt;：无论什么时候一个转换将发生时将触发该钩子。
&lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;：这些钩子在异步验证期间被触发。&lt;/p&gt;

&lt;p&gt;最后，还有一个&lt;code&gt;error&lt;/code&gt;事件，当无论什么时候，如果出现拒绝的承诺或者在&lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;中有错误被抛出都会出发该事件。&lt;/p&gt;

&lt;p&gt;更多的关于路由新特性的介绍，请参看：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://machty.s3.amazonaws.com/ember-facelift-presentation/index.html#/1"&gt;新路由概述（Alex Matchneer六月在Ember
NYC见面会上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/machty/5647589"&gt;使用实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.embercasts.com/episodes/client-side-authentication-part-2"&gt;客户端身份验证（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember组件&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;另外一个重要的改变就是Ember组件，其采用了Web组件的推动创建高层次的可重用的页面元素目标。&lt;/p&gt;

&lt;p&gt;Ember组件由一个&lt;code&gt;模板&lt;/code&gt;和一个&lt;code&gt;视图&lt;/code&gt;构成，其封装了&lt;code&gt;模板&lt;/code&gt;的属性的访问和操作。所有外部构建的引用通过传递给&lt;code&gt;视图&lt;/code&gt;的上下文信息来处理。组件可以通过自定义子类来实现。&lt;/p&gt;

&lt;p&gt;Ember组件命名惯例：&lt;/p&gt;

&lt;p&gt;1）&lt;code&gt;模板&lt;/code&gt;名以&amp;#39;components/&amp;#39;开头；
2）组件名称必须包含&amp;#39;-&amp;#39;（这与Web组件标准保持一致，可以避免与包裹HTML元素的内置控件发生冲突）。例如，一个组件可能被命名为&lt;code&gt;&amp;#39;radio-button&amp;#39;&lt;/code&gt;。它的&lt;code&gt;模板&lt;/code&gt;就是&lt;code&gt;&amp;#39;components/radio-button&amp;#39;&lt;/code&gt;，在其他的&lt;code&gt;模板&lt;/code&gt;中用&lt;code&gt;{{radio-button}}&lt;/code&gt;调用。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>第七期周报</title>
    <link rel="alternate" href="/blog/2013/06/14/ember-js-weekly.html"/>
    <id>/blog/2013/06/14/ember-js-weekly.html</id>
    <published>2013-06-14T00:00:00Z</published>
    <updated>2013-06-14T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;本期周报主要介绍与测试相关的内容：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyrsa-tdd-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYrSA"&gt;如何TDD开发Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中详细介绍了如何使用jasmine来进行Ember.js应用的TDD开发。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhytx8y-jasmine-ember-js-a'&gt;&lt;a href="http://t.cn/zHYTx8y"&gt;使用jasmine测试Ember.js的模板&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中介绍了如何使用jasmine来对Ember.js的模板进行单元测试。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyjea-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYJeA"&gt;简捷的测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;本期周报主要介绍与测试相关的内容：&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyrsa-tdd-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYrSA"&gt;如何TDD开发Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中详细介绍了如何使用jasmine来进行Ember.js应用的TDD开发。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhytx8y-jasmine-ember-js-a'&gt;&lt;a href="http://t.cn/zHYTx8y"&gt;使用jasmine测试Ember.js的模板&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;文中介绍了如何使用jasmine来对Ember.js的模板进行单元测试。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;视频&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyjea-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYJeA"&gt;简捷的测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-testing库的作者Erik Bryn主讲的如何使用ember-testing来测试Ember.js应用。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyykah-konacha-ember-js-a'&gt;&lt;a href="http://t.cn/zHYYkah"&gt;使用Konacha来测试Ember.js应用&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;视频中演示了一个结合Konacha来进行的Ember.js应用验收测试过程。对应该视频的演讲稿&lt;a href="http://t.cn/zHYTwyf"&gt;http://t.cn/zHYTwyf&lt;/a&gt;&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;库、代码和工具&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyyobo-bloggr-client-rails-a'&gt;&lt;a href="http://t.cn/zHYYObo"&gt;bloggr-client-rails&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个介绍如何使用QUnit和ember-testing来进行集成测试的例子。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyh6er-jsfiddle-mocha-ember-js-a'&gt;&lt;a href="http://t.cn/zHYH6er"&gt;jsfiddle上使用mocha对Ember.js进行测试的实例&lt;/a&gt;&lt;/h4&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-t-cn-zhyhleq-jsfiddle-qunit-ember-js-a'&gt;&lt;a href="http://t.cn/zHYHlEQ"&gt;jsfiddle上使用QUnit对Ember.js进行测试的实例&lt;/a&gt;&lt;/h4&gt;</content>
  </entry>
  <entry>
    <title>Ember.js 1.0.0-rc5发布</title>
    <link rel="alternate" href="/blog/2013/06/01/ember-js-1-0-0-rc5.html"/>
    <id>/blog/2013/06/01/ember-js-1-0-0-rc5.html</id>
    <published>2013-06-01T00:00:00Z</published>
    <updated>2013-06-01T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;今天是快乐的六一儿童节，Ember.js 1.0 RC5也在这一天发布了。本次发布预示着我们等待已久的Ember.js 1.0正式版马上就要横空出世了。&lt;/p&gt;

&lt;p&gt;RC5中主要修复了在RC4中发现的回归问题和缺陷。主要包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修复了因为改动了运行循环计划而导致的性能问题。&lt;/li&gt;
&lt;li&gt;修复了如果路由的模型钩子返回承诺（Promise）页面刷新时会挂起的问题。&lt;/li&gt;
&lt;li&gt;包含辅助测试方法的ember-testing不在包含在生产构建中。这意味着介绍了用户需要从网络加载的Javascript代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的修订记录：&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;今天是快乐的六一儿童节，Ember.js 1.0 RC5也在这一天发布了。本次发布预示着我们等待已久的Ember.js 1.0正式版马上就要横空出世了。&lt;/p&gt;

&lt;p&gt;RC5中主要修复了在RC4中发现的回归问题和缺陷。主要包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修复了因为改动了运行循环计划而导致的性能问题。&lt;/li&gt;
&lt;li&gt;修复了如果路由的模型钩子返回承诺（Promise）页面刷新时会挂起的问题。&lt;/li&gt;
&lt;li&gt;包含辅助测试方法的ember-testing不在包含在生产构建中。这意味着介绍了用户需要从网络加载的Javascript代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的修订记录：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;为不正确的容器搜索名称添加断言&lt;/li&gt;
&lt;li&gt;增加了&lt;code&gt;Ember.beforeObserver&lt;/code&gt;的文档&lt;/li&gt;
&lt;li&gt;从生产构建中移除了ember-testing&lt;/li&gt;
&lt;li&gt;修复了承诺（Promise）在启动时的缺陷。修复 #2756&lt;/li&gt;
&lt;li&gt;同步router.js修复&lt;code&gt;App#reset&lt;/code&gt;在ember-testing中的问题&lt;/li&gt;
&lt;li&gt;声明&lt;code&gt;replaceWith&lt;/code&gt;只工作在&amp;#39;history&amp;#39;模式下&lt;/li&gt;
&lt;li&gt;修正了IE7下测试不通过的问题&lt;/li&gt;
&lt;li&gt;更新backburner，修复IE8下测试失败的问题&lt;/li&gt;
&lt;li&gt;更新Backburner.js修复RC4中的性能问题&lt;/li&gt;
&lt;li&gt;维护gem包的ruby版本&lt;/li&gt;
&lt;li&gt;移除starter_kit上传任务&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>第六期周报</title>
    <link rel="alternate" href="/blog/2013/05/30/ember-js-weekly.html"/>
    <id>/blog/2013/05/30/ember-js-weekly.html</id>
    <published>2013-05-30T00:00:00Z</published>
    <updated>2013-05-30T00:00:00Z</updated>
    <author>
      <name>EmberJS.CN</name>
    </author>
    <summary type="html">&lt;p&gt;本期周报主要介绍如何搭建Ember.js应用的开发环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-thomasboyt-com-2013-05-02-announcing-charcoal-html-charcoal-ember-a'&gt;&lt;a href="http://www.thomasboyt.com/2013/05/02/announcing-charcoal.html"&gt;使用Charcoal创建Ember项目&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Charcoal是一个Yeoman的生成器，用于创建Ember项目的基本目录结构和文件。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-blog-embed-ly-post-46586649344-introduction-to-ember-development-ember-a'&gt;&lt;a href="http://blog.embed.ly/post/46586649344/introduction-to-ember-development"&gt;如何进行Ember开发&lt;/a&gt;&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;本期周报主要介绍如何搭建Ember.js应用的开发环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;读物&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-http-www-thomasboyt-com-2013-05-02-announcing-charcoal-html-charcoal-ember-a'&gt;&lt;a href="http://www.thomasboyt.com/2013/05/02/announcing-charcoal.html"&gt;使用Charcoal创建Ember项目&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Charcoal是一个Yeoman的生成器，用于创建Ember项目的基本目录结构和文件。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-http-blog-embed-ly-post-46586649344-introduction-to-ember-development-ember-a'&gt;&lt;a href="http://blog.embed.ly/post/46586649344/introduction-to-ember-development"&gt;如何进行Ember开发&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Embedly在其产品中使用了Ember进行开发，在开发过程终于到了许多问题。本文主要介绍了如何构建一个开发Ember应用基础环境。&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_'&gt;库、代码和工具&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-yeoman-generator-ember-generator-ember-a'&gt;&lt;a href="https://github.com/yeoman/generator-ember"&gt;generator-ember&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Yeoman的Ember生成器，用来构建一个Ember的“Hello World”应用。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-zigomir-ember-skeleton-ember-skeleton-a'&gt;&lt;a href="https://github.com/zigomir/ember-skeleton"&gt;ember-skeleton&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-skeleton主要关注在开发的过程中实现在线重新载入，支持CoffeeScript，以及支持模板的预编译等。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-lsdafjklsd-grunt-ember-boilerplate-grunt-ember-boilerplate-a'&gt;&lt;a href="https://github.com/lsdafjklsd/grunt-ember-boilerplate"&gt;grunt-ember-boilerplate&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;grunt-ember-boilerplate中几乎涵盖了在开发Ember应用过程中会遇到和用到的所有相关技术。包括：Handlebars预编译、基于QUnit的集成测试、生成基础目录结构、commonjs模块、CoffeeScript、Stylus for CSS、Normalize.css、生成部署的预编译指令和本地开发的动态重载。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-thomasboyt-charcoal-charcoal-a'&gt;&lt;a href="https://github.com/thomasboyt/charcoal"&gt;charcoal&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个Fork自&lt;a href="https://github.com/yeoman/generator-ember"&gt;generator-ember&lt;/a&gt;的Yeoman的Ember生成器。&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-rails-ember-rails-a'&gt;&lt;a href="https://github.com/emberjs/ember-rails"&gt;ember-rails&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ember-rails使得Ember在Rails 3.1+应用中得以使用。其可以将Handlebars模板在编译assets的时候进行预编译。&lt;/p&gt;
</content>
  </entry>
</feed>
